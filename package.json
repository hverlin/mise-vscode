{
	"name": "mise-vscode",
	"displayName": "Mise VSCode",
	"publisher": "hverlin",
	"description": "mise support for Visual Studio code  (dev-tools, tasks and environment variables)",
	"version": "0.11.0",
	"repository": {
		"type": "git",
		"url": "https://github.com/hverlin/mise-vscode"
	},
	"bugs": {
		"url": "https://github.com/hverlin/mise-vscode/issues"
	},
	"license": "MIT",
	"engines": {
		"vscode": "^1.85.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"mise",
		"mise-en-place",
		"rtx",
		"devtools",
		"tasks",
		"envs",
		"environment variables",
		"scripts"
	],
	"icon": "resources/icon.png",
	"main": "./dist/extension.js",
	"activationEvents": [
		"onTaskType:mise",
		"workspaceContains:.config/mise/**/config.*.toml",
		"workspaceContains:.config/mise/**/config.toml",
		"workspaceContains:.mise.*.toml",
		"workspaceContains:.mise.toml",
		"workspaceContains:.mise/config.*.toml",
		"workspaceContains:.mise/config.toml",
		"workspaceContains:mise.*.toml",
		"workspaceContains:mise.toml",
		"workspaceContains:mise/config.*.toml",
		"workspaceContains:mise/config.toml"
	],
	"contributes": {
		"tomlValidation": [
			{
				"fileMatch": [
					".mise.toml",
					".mise.*.toml",
					"mise.toml",
					"mise.*.toml",
					"**/.mise/config.toml",
					"**/mise/config.toml"
				],
				"url": "https://mise.jdx.dev/schema/mise.json"
			},
			{
				"regexMatch": "task[s]?.toml",
				"url": "https://raw.githubusercontent.com/hverlin/mise-vscode/refs/heads/main/schemas/toml-task-file-schema.json"
			}
		],
		"snippets": [
			{
				"language": "toml",
				"path": "./snippets/toml-tasks-snippets.json"
			},
			{
				"language": "shellscript",
				"path": "./snippets/file-tasks-snippets.json"
			}
		],
		"configuration": {
			"title": "Mise",
			"properties": {
				"mise.enable": {
					"order": 1,
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"markdownDescription": "Enable/disable mise extension."
				},
				"mise.binPath": {
					"order": 2,
					"type": "string",
					"scope": "resource",
					"markdownDescription": "Path to the mise binary (automatically detected on startup).\n\nSee https://mise.jdx.dev/getting-started.html to install mise."
				},
				"mise.profile": {
					"order": 3,
					"type": "string",
					"scope": "resource",
					"markdownDescription": "Mise profile to use. (https://mise.jdx.dev/profiles.html)"
				},
				"mise.configureExtensionsAutomatically": {
					"order": 4,
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"markdownDescription": "Automatically configure extensions for the current workspace. ([list of supported extensions](https://github.com/hverlin/mise-vscode/wiki/Supported-extensions))"
				},
				"mise.configureExtensionsUseShims": {
					"order": 5,
					"type": "boolean",
					"scope": "resource",
					"title": "Configure extensions to use shims",
					"default": true,
					"markdownDescription": "Use shims when configuring extensions. When shims are not used, note that you will have to configure environment variables manually."
				},
				"mise.configureExtensionsUseSymLinks": {
					"order": 6,
					"type": "boolean",
					"scope": "resource",
					"title": "Configure extensions to use symlinks",
					"default": false,
					"markdownDescription": "Create symlinks in your `.vscode` folder that links to the `mise` bin. This is useful if you share the `.vscode/settings.json` file with others."
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "mise-panel",
					"title": "Mise",
					"icon": "$(terminal)"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "miseTasksView",
				"contents": "[Tasks](https://mise.jdx.dev/tasks/) will be displayed here.\n[Refresh](command:mise.refreshEntry)",
				"when": "config.mise.binPath && config.mise.enable"
			},
			{
				"view": "miseTasksView",
				"contents": "[Install mise](https://mise.jdx.dev/getting-started.html) to get started.\nOnce mise is installed, click reload.\n[Reload](command:mise.refreshEntry)\n[Configure](command:mise.openSettings)",
				"when": "!config.mise.binPath"
			},
			{
				"view": "miseToolsView",
				"contents": "[Tools](https://mise.jdx.dev/dev-tools/) will be displayed here.",
				"when": "config.mise.enable"
			},
			{
				"view": "miseEnvsView",
				"contents": "[Environment variables](https://mise.jdx.dev/environments.html) will be displayed here.",
				"when": "config.mise.binPath && config.mise.enable"
			},
			{
				"view": "miseTasksView",
				"contents": "Mise extension is disabled.\n[Open settings](command:mise.openSettings)",
				"when": "!config.mise.enable"
			},
			{
				"view": "miseToolsView",
				"contents": "Mise extension is disabled.\n[Open settings](command:mise.openSettings)",
				"when": "!config.mise.enable"
			},
			{
				"view": "miseEnvsView",
				"contents": "Mise extension is disabled.\n[Open settings](command:mise.openSettings)",
				"when": "!config.mise.enable"
			}
		],
		"views": {
			"mise-panel": [
				{
					"id": "miseTasksView",
					"name": "Tasks"
				},
				{
					"id": "miseToolsView",
					"name": "Tools"
				},
				{
					"id": "miseEnvsView",
					"name": "Environment Variables"
				}
			]
		},
		"commands": [
			{
				"command": "mise.refreshEntry",
				"title": "Mise: Reload configuration",
				"icon": "$(refresh)"
			},
			{
				"command": "mise.openMenu",
				"title": "Mise: Open Menu"
			},
			{
				"command": "mise.runTask",
				"title": "Mise: Run task",
				"icon": "$(play)"
			},
			{
				"command": "mise.watchTask",
				"title": "Mise: Run Task in Watch Mode"
			},
			{
				"command": "mise.createFileTask",
				"title": "Mise: Create File Task",
				"icon": "$(new-file)"
			},
			{
				"command": "mise.createTomlTask",
				"title": "Mise: Create Toml Task",
				"icon": "$(add)"
			},
			{
				"command": "mise.openToolDefinition",
				"title": "Mise: Open Tool Definition"
			},
			{
				"command": "mise.openTaskDefinition",
				"title": "Mise: Open Task Definition"
			},
			{
				"command": "mise.removeTool",
				"title": "Mise: Remove Tool"
			},
			{
				"command": "mise.copyToolInstallPath",
				"title": "Mise: Copy Tool Install Path",
				"context": [
					"miseToolsView"
				]
			},
			{
				"command": "mise.copyToolBinPath",
				"title": "Mise: Copy Tool Bin Path",
				"context": [
					"miseToolsView"
				]
			},
			{
				"command": "mise.copyEnvVariableName",
				"title": "Mise: Copy Environment Variable Name"
			},
			{
				"command": "mise.copyEnvVariableValue",
				"title": "Mise: Copy Environment Variable Value"
			},
			{
				"command": "mise.installTool",
				"title": "Mise: Install Tool"
			},
			{
				"command": "mise.installAll",
				"title": "Mise: Run mise install",
				"icon": "$(cloud-download)"
			},
			{
				"command": "mise.useTool",
				"title": "Mise: Run mise use",
				"icon": "$(add)"
			},
			{
				"command": "mise.configureSdkPath",
				"title": "Mise: Configure extension sdk path..."
			},
			{
				"command": "mise.configureAllSdkPaths",
				"title": "Mise: Configure all extension sdk paths"
			},
			{
				"command": "mise.openSettings",
				"title": "Mise: Open Settings",
				"icon": "$(tools)"
			},
			{
				"command": "mise.listAllTools",
				"title": "Mise: List all Tools",
				"icon": "$(list-ordered)"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "mise.createTomlTask",
					"when": "view == miseTasksView",
					"group": "navigation@1"
				},
				{
					"command": "mise.createFileTask",
					"when": "view == miseTasksView",
					"group": "navigation@2"
				},
				{
					"command": "mise.listAllTools",
					"when": "view == miseToolsView",
					"group": "navigation@1"
				},
				{
					"command": "mise.useTool",
					"when": "view == miseToolsView",
					"group": "navigation@2"
				},
				{
					"command": "mise.installAll",
					"when": "view == miseToolsView",
					"group": "navigation@3"
				},
				{
					"command": "mise.refreshEntry",
					"when": "view == miseTasksView || view == miseToolsView || view == miseEnvsView",
					"group": "navigation@4"
				}
			],
			"view/item/context": [
				{
					"when": "view == miseTasksView && viewItem == miseTask",
					"command": "mise.runTask",
					"group": "inline"
				},
				{
					"when": "view == miseTasksView && viewItem == miseTaskGroupEditable",
					"command": "mise.createTomlTask",
					"group": "inline"
				},
				{
					"when": "view == miseTasksView && viewItem == miseTask",
					"command": "mise.runTask",
					"group": "2_modification"
				},
				{
					"when": "view == miseTasksView && viewItem == miseTask",
					"command": "mise.watchTask",
					"group": "2_modification"
				},
				{
					"command": "mise.removeTool",
					"when": "view == miseToolsView && viewItem == tool-installed",
					"group": "2_modification"
				},
				{
					"command": "mise.installTool",
					"when": "view == miseToolsView && viewItem == tool-notinstalled",
					"group": "2_modification"
				},
				{
					"command": "mise.copyToolInstallPath",
					"when": "view == miseToolsView && viewItem == tool-installed",
					"group": "2_modification"
				},
				{
					"command": "mise.copyToolBinPath",
					"when": "view == miseToolsView && viewItem == tool-installed",
					"group": "2_modification"
				},
				{
					"when": "view == miseToolsView && viewItem == source",
					"command": "mise.useTool",
					"group": "inline"
				},
				{
					"command": "mise.copyEnvVariableName",
					"when": "view == miseEnvsView && viewItem == envItem",
					"group": "2_modification"
				},
				{
					"when": "view == miseEnvsView && viewItem == envItem",
					"command": "mise.copyEnvVariableValue",
					"group": "2_modification"
				}
			]
		},
		"taskDefinitions": [
			{
				"type": "mise",
				"required": [
					"task"
				],
				"properties": {
					"task": {
						"description": "The mise task to execute",
						"type": "string"
					},
					"watch": {
						"description": "Re-run the task when files change",
						"type": "boolean"
					},
					"profile": {
						"description": "The mise profile to use",
						"type": "string"
					},
					"glob": {
						"description": "Glob pattern to watch for changes. Defaults to sources from the tasks(s)",
						"type": "string"
					},
					"runArgs": {
						"description": "Arguments to pass to the task. Not used when watch is true",
						"type": "array",
						"items": {
							"type": "string"
						},
						"default": []
					},
					"watchexecArgs": {
						"description": "Arguments to pass to watchexec. (example: --clear) | use watchexec --help for more information",
						"type": "array",
						"items": {
							"type": "string"
						},
						"default": []
					}
				}
			}
		]
	},
	"scripts": {
		"dev-extension": "rsbuild dev",
		"dev-webviews": "rsbuild dev -c rsbuild.webviews.config.ts",
		"build": "rsbuild build && rsbuild build -c rsbuild.webviews.config.ts",
		"ts-check": "tsc --noEmit",
		"lint-fix": "biome check --fix",
		"lint": "biome ci",
		"test": "npx bun test"
	},
	"devDependencies": {
		"@biomejs/biome": "1.9.4",
		"@rsbuild/core": "^1.1.0",
		"@rsbuild/plugin-react": "^1.0.7",
		"@types/node": "^22.9.0",
		"@types/react": "^18.3.12",
		"@types/react-dom": "^18.3.1",
		"@types/vscode": "^1.85.0",
		"typescript": "^5.6.3"
	},
	"packageManager": "pnpm@9.12.2+sha512.22721b3a11f81661ae1ec68ce1a7b879425a1ca5b991c975b074ac220b187ce56c708fe5db69f4c962c989452eee76c82877f4ee80f474cebd61ee13461b6228",
	"dependencies": {
		"@iarna/toml": "^2.2.5",
		"@std/collections": "npm:@jsr/std__collections@^1.0.9",
		"@tanstack/react-query": "^5.60.5",
		"@tanstack/react-table": "^8.20.5",
		"cheerio": "^1.0.0",
		"react": "^18.3.1",
		"react-dom": "^18.3.1"
	}
}
