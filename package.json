{
	"name": "mise-vscode",
	"displayName": "Mise VSCode",
	"publisher": "hverlin",
	"description": "mise support for Visual Studio code  (dev-tools, tasks and environment variables)",
	"version": "0.34.3",
	"repository": {
		"type": "git",
		"url": "https://github.com/hverlin/mise-vscode"
	},
	"bugs": {
		"url": "https://github.com/hverlin/mise-vscode/issues"
	},
	"license": "MIT",
	"engines": {
		"vscode": "^1.85.0"
	},
	"categories": [
		"Programming Languages",
		"Snippets",
		"Other"
	],
	"keywords": [
		"mise",
		"mise-en-place",
		"devtools",
		"rtx",
		"asdf",
		"asdf-vm",
		"tasks",
		"envs",
		"environment variables",
		"scripts"
	],
	"icon": "resources/icon.png",
	"main": "./dist/extension.js",
	"activationEvents": [
		"onTaskType:mise",
		"workspaceContains:.config/mise/**/config.*.toml",
		"workspaceContains:.config/mise/**/config.toml",
		"workspaceContains:.mise.*.toml",
		"workspaceContains:.mise.toml",
		"workspaceContains:.mise/config.*.toml",
		"workspaceContains:.mise/config.toml",
		"workspaceContains:mise.*.toml",
		"workspaceContains:mise.toml",
		"workspaceContains:mise/config.*.toml",
		"workspaceContains:mise/config.toml",
		"onLanguage"
	],
	"extensionDependencies": [
		"tamasfe.even-better-toml"
	],
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": false,
			"description": "This extension requires a trusted workspace because it can execute code in the workspace."
		}
	},
	"contributes": {
		"tomlValidation": [
			{
				"fileMatch": [
					".mise.toml",
					".mise.*.toml",
					"mise.toml",
					"mise.*.toml",
					"**/.mise/config.toml",
					"**/mise/config.toml"
				],
				"url": "https://mise.jdx.dev/schema/mise.json"
			},
			{
				"regexMatch": "task[s]?.toml",
				"url": "https://mise.jdx.dev/schema/mise-task.json"
			}
		],
		"grammars": [
			{
				"injectTo": [
					"source.toml"
				],
				"scopeName": "inline.tera-mise",
				"path": "./syntaxes/tera-mise.json",
				"embeddedLanguages": {
					"meta.embedded.tera.expression": "tera",
					"meta.embedded.tera.statement": "tera",
					"source.js": "javascript",
					"source.python": "python",
					"source.shell": "shellscript",
					"source.ruby": "ruby"
				}
			}
		],
		"snippets": [
			{
				"language": "toml",
				"path": "./snippets/toml-tasks-snippets.json"
			},
			{
				"language": "shellscript",
				"path": "./snippets/file-tasks-snippets.json"
			}
		],
		"configuration": {
			"title": "Mise",
			"properties": {
				"mise.enable": {
					"order": 1,
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable/disable mise extension."
				},
				"mise.binPath": {
					"order": 2,
					"type": "string",
					"markdownDescription": "Path to the mise binary (automatically detected on startup).\n\nSee https://mise.jdx.dev/getting-started.html to install mise."
				},
				"mise.miseEnv": {
					"order": 3,
					"type": "string",
					"markdownDescription": "Mise environment to use. (https://mise.jdx.dev/configuration/environments.html)"
				},
				"mise.configureExtensionsAutomatically": {
					"order": 4,
					"type": "boolean",
					"default": true,
					"markdownDescription": "Automatically configure extensions for the current workspace. ([list of supported extensions](https://github.com/hverlin/mise-vscode/wiki/Supported-extensions))"
				},
				"mise.configureExtensionsAutomaticallyIgnoreList": {
					"order": 5,
					"type": "array",
					"default": [],
					"items": {
						"type": "string",
						"enum": [
							"ms-python.python",
							"denoland.vscode-deno",
							"charliermarsh.ruff",
							"golang.go",
							"oven.bun-vscode",
							"oracle.oracle-java",
							"timonwong.shellcheck",
							"ms-vscode.js-debug",
							"vscode.php-language-features",
							"xdebug.php-debug",
							"julialang.language-julia",
							"pgourlain.erlang",
							"Dart-Code.dart-code",
							"dart-code.flutter",
							"ziglang.vscode-zig"
						]
					},
					"markdownDescription": "List of extensions that should not be configured automatically."
				},
				"mise.configureExtensionsUseShims": {
					"order": 6,
					"type": "boolean",
					"title": "Configure extensions to use shims",
					"default": true,
					"markdownDescription": "Use shims when configuring extensions. When shims are not used, note that you will have to configure environment variables manually."
				},
				"mise.configureExtensionsUseSymLinks": {
					"order": 7,
					"type": "boolean",
					"title": "Configure extensions to use symlinks",
					"default": false,
					"markdownDescription": "Create symlinks in your `.vscode` folder that links to the `mise` bin. This is useful if you share the `.vscode/settings.json` file with others."
				},
				"mise.enableCodeLens": {
					"order": 8,
					"type": "boolean",
					"title": "Enable code lens",
					"default": true,
					"markdownDescription": "Show run/add tool code lens indicators in the editor."
				},
				"mise.showToolVersionsDecorations": {
					"order": 9,
					"type": "boolean",
					"title": "Show tool versions",
					"default": true,
					"markdownDescription": "Show tool versions in the editor. (requires reload)"
				},
				"mise.checkForNewMiseVersion": {
					"order": 10,
					"type": "boolean",
					"title": "Check for new mise version",
					"default": true,
					"markdownDescription": "Check if a new mise version is available on startup."
				},
				"mise.updateEnvAutomatically": {
					"order": 11,
					"type": "boolean",
					"title": "Update environment variables automatically",
					"default": true,
					"markdownDescription": "Update VSCode and terminal environment variables automatically based on the mise configuration. Note that depending on the extensions loading order, other extensions might not see all mise environment variables."
				},
				"mise.updateOpenTerminalsEnvAutomatically": {
					"order": 12,
					"type": "boolean",
					"title": "Update terminal environment variables automatically",
					"default": false,
					"markdownDescription": "Update terminal environment variables automatically based on the mise configuration. This will send `unset` and `eval $(mise env)` commands to the terminal. If you don't enable this, you will need to restart the integrated terminals to get the new environment variables."
				},
				"mise.teraAutoCompletion": {
					"order": 13,
					"type": "boolean",
					"title": "Enable Tera auto-completion",
					"default": true,
					"markdownDescription": "Enable experimental Tera auto-completion in `mise.toml` files."
				},
				"mise.automaticallyTrustMiseConfigFiles": {
					"order": 14,
					"type": "boolean",
					"title": "Automatically trust mise config files",
					"default": true,
					"markdownDescription": "Automatically trust mise config files when opening them in a trusted worskspace."
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "mise-panel",
					"title": "Mise",
					"icon": "$(terminal)"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "miseTasksView",
				"contents": "[Tasks](https://mise.jdx.dev/tasks/) will be displayed here. ([refresh](command:mise.refreshEntry))\n[Add task](command:mise.createTomlTask)",
				"when": "config.mise.binPath && config.mise.enable"
			},
			{
				"view": "miseTasksView",
				"contents": "[Install mise](https://mise.jdx.dev/getting-started.html) to get started.\nOnce mise is installed, click reload.\n[Reload](command:mise.refreshEntry)\n[Configure](command:mise.openExtensionSettings)",
				"when": "!config.mise.binPath"
			},
			{
				"view": "miseToolsView",
				"contents": "[Tools](https://mise.jdx.dev/dev-tools/) will be displayed here.",
				"when": "config.mise.enable"
			},
			{
				"view": "miseEnvsView",
				"contents": "[Environment variables](https://mise.jdx.dev/environments.html) will be displayed here.",
				"when": "config.mise.binPath && config.mise.enable"
			},
			{
				"view": "miseTasksView",
				"contents": "Mise extension is disabled.\n[Open settings](command:mise.openExtensionSettings)",
				"when": "!config.mise.enable"
			},
			{
				"view": "miseToolsView",
				"contents": "Mise extension is disabled.\n[Open settings](command:mise.openExtensionSettings)",
				"when": "!config.mise.enable"
			},
			{
				"view": "miseEnvsView",
				"contents": "Mise extension is disabled.\n[Open settings](command:mise.openExtensionSettings)",
				"when": "!config.mise.enable"
			}
		],
		"views": {
			"mise-panel": [
				{
					"id": "miseTasksView",
					"name": "Tasks"
				},
				{
					"id": "miseToolsView",
					"name": "Tools"
				},
				{
					"id": "miseEnvsView",
					"name": "Environment Variables"
				}
			]
		},
		"commands": [
			{
				"command": "mise.refreshEntry",
				"title": "Mise: Reload configuration",
				"icon": "$(refresh)"
			},
			{
				"command": "mise.openMenu",
				"title": "Mise: Open Menu"
			},
			{
				"command": "mise.runTask",
				"title": "Mise: Run task",
				"icon": "$(play)"
			},
			{
				"command": "mise.watchTask",
				"title": "Mise: Run Task in Watch Mode",
				"icon": "$(watch)"
			},
			{
				"command": "mise.createFileTask",
				"title": "Mise: Create File Task",
				"icon": "$(new-file)"
			},
			{
				"command": "mise.createTomlTask",
				"title": "Mise: Create Toml Task",
				"icon": "$(add)"
			},
			{
				"command": "mise.openToolDefinition",
				"title": "Mise: Open Tool Definition"
			},
			{
				"command": "mise.openTaskDefinition",
				"title": "Mise: Open Task Definition"
			},
			{
				"command": "mise.openEnvVariableDefinition",
				"title": "Mise: Find Environment Variable Definition"
			},
			{
				"command": "mise.openFile",
				"title": "Mise: Open File"
			},
			{
				"command": "mise.removeTool",
				"title": "Mise: Remove Tool"
			},
			{
				"command": "mise.copyToolInstallPath",
				"title": "Mise: Copy Tool Install Path",
				"context": [
					"miseToolsView"
				]
			},
			{
				"command": "mise.copyToolBinPaths",
				"title": "Mise: Copy Tool Bin Paths",
				"context": [
					"miseToolsView"
				]
			},
			{
				"command": "mise.copyEnvVariableName",
				"title": "Mise: Copy Environment Variable Name"
			},
			{
				"command": "mise.copyEnvVariableValue",
				"title": "Mise: Copy Environment Variable Value"
			},
			{
				"command": "mise.installTool",
				"title": "Mise: Install Tool"
			},
			{
				"command": "mise.installAll",
				"title": "Mise: Run mise install",
				"icon": "$(cloud-download)"
			},
			{
				"command": "mise.useTool",
				"title": "Mise: Run mise use",
				"icon": "$(add)"
			},
			{
				"command": "mise.configureSdkPath",
				"title": "Mise: Configure extension sdk path..."
			},
			{
				"command": "mise.configureAllSdkPaths",
				"title": "Mise: Configure all extension sdk paths"
			},
			{
				"command": "mise.openExtensionSettings",
				"title": "Mise: Open extension settings",
				"icon": "$(tools)"
			},
			{
				"command": "mise.openLogs",
				"title": "Mise: Show extension logs",
				"icon": "$(list-unordered)"
			},
			{
				"command": "mise.listAllTools",
				"title": "Mise: List all Tools",
				"icon": "$(list-ordered)"
			},
			{
				"command": "mise.showSettings",
				"title": "Mise: Show mise settings",
				"icon": "$(list-ordered)"
			},
			{
				"command": "mise.showTrackedConfig",
				"title": "Mise: Show mise tracked configurations",
				"icon": "$(list-ordered)"
			},
			{
				"command": "mise.setEnvVariable",
				"title": "Mise: Set Environment Variable",
				"icon": "$(add)"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "mise.createTomlTask",
					"when": "view == miseTasksView",
					"group": "navigation@1"
				},
				{
					"command": "mise.createFileTask",
					"when": "view == miseTasksView",
					"group": "navigation@2"
				},
				{
					"command": "mise.listAllTools",
					"when": "view == miseToolsView",
					"group": "navigation@1"
				},
				{
					"command": "mise.useTool",
					"when": "view == miseToolsView",
					"group": "navigation@2"
				},
				{
					"command": "mise.installAll",
					"when": "view == miseToolsView",
					"group": "navigation@3"
				},
				{
					"command": "mise.setEnvVariable",
					"when": "view == miseEnvsView",
					"group": "navigation@1"
				},
				{
					"command": "mise.refreshEntry",
					"when": "view == miseTasksView || view == miseToolsView || view == miseEnvsView",
					"group": "navigation@4"
				}
			],
			"view/item/context": [
				{
					"when": "view == miseTasksView && viewItem == miseTask",
					"command": "mise.runTask",
					"group": "inline"
				},
				{
					"when": "view == miseTasksView && viewItem == miseTask",
					"command": "mise.watchTask",
					"group": "inline"
				},
				{
					"when": "view == miseTasksView && viewItem == miseTaskGroupEditable",
					"command": "mise.createTomlTask",
					"group": "inline"
				},
				{
					"when": "view == miseTasksView && (viewItem == miseTaskGroupEditable || viewItem == miseTaskGroup)",
					"command": "mise.openFile",
					"group": "2_modification"
				},
				{
					"when": "view == miseTasksView && viewItem == miseTask",
					"command": "mise.runTask",
					"group": "2_modification"
				},
				{
					"when": "view == miseTasksView && viewItem == miseTask",
					"command": "mise.watchTask",
					"group": "2_modification"
				},
				{
					"command": "mise.removeTool",
					"when": "view == miseToolsView && viewItem == tool-installed",
					"group": "2_modification"
				},
				{
					"command": "mise.installTool",
					"when": "view == miseToolsView && viewItem == tool-notinstalled",
					"group": "2_modification"
				},
				{
					"command": "mise.copyToolInstallPath",
					"when": "view == miseToolsView && viewItem == tool-installed",
					"group": "2_modification"
				},
				{
					"command": "mise.copyToolBinPaths",
					"when": "view == miseToolsView && viewItem == tool-installed",
					"group": "2_modification"
				},
				{
					"when": "view == miseToolsView && viewItem == miseToolGroup",
					"command": "mise.useTool",
					"group": "inline"
				},
				{
					"when": "view == miseToolsView && viewItem == miseToolGroup",
					"command": "mise.openFile",
					"group": "2_modification"
				},
				{
					"command": "mise.copyEnvVariableName",
					"when": "view == miseEnvsView && viewItem == envItem",
					"group": "2_modification"
				},
				{
					"when": "view == miseEnvsView && viewItem == envItem",
					"command": "mise.copyEnvVariableValue",
					"group": "2_modification"
				}
			]
		},
		"taskDefinitions": [
			{
				"type": "mise",
				"required": [
					"task"
				],
				"properties": {
					"task": {
						"description": "The mise task to execute",
						"type": "string"
					},
					"watch": {
						"description": "Re-run the task when files change",
						"type": "boolean"
					},
					"miseEnv": {
						"description": "The mise environment to use",
						"type": "string"
					},
					"glob": {
						"description": "Glob pattern to watch for changes. Defaults to sources from the tasks(s)",
						"type": "string"
					},
					"runArgs": {
						"description": "Arguments to pass to the task. Not used when watch is true",
						"type": "array",
						"items": {
							"type": "string"
						},
						"default": []
					},
					"watchexecArgs": {
						"description": "Arguments to pass to watchexec. (example: --clear) | use watchexec --help for more information",
						"type": "array",
						"items": {
							"type": "string"
						},
						"default": []
					}
				}
			}
		]
	},
	"scripts": {
		"dev-extension": "rsbuild dev",
		"dev-webviews": "rsbuild dev -c rsbuild.webviews.config.ts",
		"build": "rsbuild build && rsbuild build -c rsbuild.webviews.config.ts",
		"ts-check": "tsc --noEmit",
		"lint-fix": "biome check --fix",
		"lint": "biome ci",
		"test": "bun test"
	},
	"devDependencies": {
		"@biomejs/biome": "1.9.4",
		"@rsbuild/core": "^1.1.6",
		"@rsbuild/plugin-react": "^1.0.7",
		"@types/node": "^22.9.0",
		"@types/react": "^18.3.12",
		"@types/react-dom": "^18.3.1",
		"@types/vscode": "^1.85.0",
		"bun": "^1.1.38",
		"typescript": "^5.6.3"
	},
	"packageManager": "pnpm@9.12.2+sha512.22721b3a11f81661ae1ec68ce1a7b879425a1ca5b991c975b074ac220b187ce56c708fe5db69f4c962c989452eee76c82877f4ee80f474cebd61ee13461b6228",
	"dependencies": {
		"@std/collections": "npm:@jsr/std__collections@^1.0.9",
		"@tanstack/match-sorter-utils": "^8.19.4",
		"@tanstack/react-query": "^5.60.5",
		"@tanstack/react-table": "^8.20.5",
		"@vscode-elements/react-elements": "^0.8.0",
		"@vscode/codicons": "^0.0.36",
		"async-cache-dedupe": "^2.2.0",
		"cheerio": "^1.0.0",
		"react": "18.3.1",
		"react-dom": "18.3.1",
		"react-error-boundary": "^4.1.2",
		"toml-v1": "^1.0.0"
	}
}
